<UserControl x:Class="ThrustVectoringUI.Views.KontrolPaneliView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:local="clr-namespace:ThrustVectoringUI.Views"
             xmlns:agc="http://www.arction.com/gauges/"
             xmlns:lvc="clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf"
             mc:Ignorable="d" 
             d:DesignHeight="768" d:DesignWidth="1366">
    <UserControl.Resources>
        <LinearGradientBrush x:Key="HorizontalSliderThumbHoverBackgroundInverted" EndPoint="0,0" StartPoint="0,1">
            <GradientStop Color="white" Offset="0"/>
            <GradientStop Color="#B8E2F9" Offset="0.5"/>
            <GradientStop Color="#B0DFF8" Offset="1"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="HorizontalSliderThumbHoverBorder" Color="#3C7FB1"/>
        <LinearGradientBrush x:Key="HorizontalSliderThumbPressedBackgroundInverted" EndPoint="0,0" StartPoint="0,1">
            <GradientStop Color="#B8E4FA" Offset="0.25"/>
            <GradientStop Color="#5EB4E3" Offset="0.5"/>
            <GradientStop Color="#4C8BB4" Offset="1"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="HorizontalSliderThumbPressedBorder" Color="#2C628B"/>
        <Geometry x:Key="SliderThumbDisabledGeometry">M -5,-10.5 L 5,-10.5 L 5,10.5 L -5,10.5 Z</Geometry>
        <Geometry x:Key="SliderPointedThumbDisabledGeometry">M 4.5,-8.5 L -4.5,-8.5 L -4.5,4.5 L -0.5,8.5 L 0.5,8.5 L 4.5,4.5 Z</Geometry>
        <Geometry x:Key="SliderPointedThumbOuterBorderGeometry">M 4.5,-7.5 A 1 1 0 0 0 3.5,-8.5 L -3.5,-8.5 A 1 1 0 0 0 -4.5,-7.5 L -4.5,4.5 L -0.5,8.5 L 0.5,8.5 L 4.5,4.5 Z</Geometry>
        <LinearGradientBrush x:Key="HorizontalSliderThumbNormalBackgroundInverted" EndPoint="0,0" StartPoint="0,1">
            <GradientStop Color="White" Offset="0"/>
            <GradientStop Color="#F0EFEF" Offset="0.4"/>
            <GradientStop Color="#D6D5D5" Offset=".8"/>
        </LinearGradientBrush>
        <Geometry x:Key="SliderPointedThumbMiddleBorderGeometry">M 3.5,-7.5 L -3.5,-7.5 L -3.5,4.5 L 0,8 L 3.5,4.5 Z</Geometry>
        <Style x:Key="HorizontalSliderUpThumbStyle" TargetType="{x:Type Thumb}">
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Height" Value="18"/>
            <Setter Property="Width" Value="10"/>
            <Setter Property="Foreground" Value="Gray"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Canvas SnapsToDevicePixels="true">
                            <Canvas.RenderTransform>
                                <TransformGroup>
                                    <TransformGroup.Children>
                                        <TransformCollection>
                                            <RotateTransform Angle="180"/>
                                            <TranslateTransform X="5" Y="9"/>
                                        </TransformCollection>
                                    </TransformGroup.Children>
                                </TransformGroup>
                            </Canvas.RenderTransform>
                            <Path x:Name="Background" Data="{StaticResource SliderPointedThumbOuterBorderGeometry}" Fill="{StaticResource HorizontalSliderThumbNormalBackgroundInverted}"/>
                            <Path x:Name="InnerBorder" Data="{StaticResource SliderPointedThumbMiddleBorderGeometry}" Stroke="White" StrokeThickness="1"/>
                            <Path x:Name="OuterBorder" Data="{StaticResource SliderPointedThumbOuterBorderGeometry}" Stroke="#FF929292" StrokeThickness="1"/>
                        </Canvas>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="Background" Value="{StaticResource HorizontalSliderThumbHoverBackgroundInverted}"/>
                                <Setter Property="Stroke" TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbHoverBorder}"/>
                            </Trigger>
                            <Trigger Property="Foreground" Value="Blue">
                                <Setter Property="Fill" TargetName="Background" Value="{StaticResource HorizontalSliderThumbHoverBackgroundInverted}"/>
                                <Setter Property="Stroke" TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbHoverBorder}"/>
                            </Trigger>
                            <Trigger Property="IsDragging" Value="true">
                                <Setter Property="Fill" TargetName="Background" Value="{StaticResource HorizontalSliderThumbPressedBackgroundInverted}"/>
                                <Setter Property="Stroke" TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbPressedBorder}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="Background" Value="#FFF4F4F4"/>
                                <Setter Property="Stroke" TargetName="InnerBorder" Value="{x:Null}"/>
                                <Setter Property="Data" TargetName="OuterBorder" Value="{StaticResource SliderThumbDisabledGeometry}"/>
                                <Setter Property="Stroke" TargetName="OuterBorder" Value="#FFAEB1AF"/>
                                <Setter Property="Data" TargetName="OuterBorder" Value="{StaticResource SliderPointedThumbDisabledGeometry}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="HorizontalSliderThumbHoverBackground" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="white" Offset="0"/>
            <GradientStop Color="#B8E2F9" Offset="0.5"/>
            <GradientStop Color="#B0DFF8" Offset="1"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="HorizontalSliderThumbPressedBackground" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#B8E4FA" Offset="0.25"/>
            <GradientStop Color="#5EB4E3" Offset="0.5"/>
            <GradientStop Color="#4C8BB4" Offset="1"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="HorizontalSliderThumbNormalBackground" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="White" Offset="0"/>
            <GradientStop Color="#F0EFEF" Offset="0.4"/>
            <GradientStop Color="#D6D5D5" Offset=".8"/>
        </LinearGradientBrush>
        <Style x:Key="HorizontalSliderDownThumbStyle" TargetType="{x:Type Thumb}">
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Height" Value="18"/>
            <Setter Property="Width" Value="10"/>
            <Setter Property="Foreground" Value="Gray"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Canvas SnapsToDevicePixels="true">
                            <Canvas.RenderTransform>
                                <TranslateTransform X="5" Y="9"/>
                            </Canvas.RenderTransform>
                            <Path x:Name="Background" Data="{StaticResource SliderPointedThumbOuterBorderGeometry}" Fill="{StaticResource HorizontalSliderThumbNormalBackground}"/>
                            <Path x:Name="InnerBorder" Data="{StaticResource SliderPointedThumbMiddleBorderGeometry}" Stroke="White" StrokeThickness="1"/>
                            <Path x:Name="OuterBorder" Data="{StaticResource SliderPointedThumbOuterBorderGeometry}" Stroke="#FF929292" StrokeThickness="1"/>
                        </Canvas>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="Background" Value="{StaticResource HorizontalSliderThumbHoverBackground}"/>
                                <Setter Property="Stroke" TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbHoverBorder}"/>
                            </Trigger>
                            <Trigger Property="Foreground" Value="Blue">
                                <Setter Property="Fill" TargetName="Background" Value="{StaticResource HorizontalSliderThumbHoverBackground}"/>
                                <Setter Property="Stroke" TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbHoverBorder}"/>
                            </Trigger>
                            <Trigger Property="IsDragging" Value="true">
                                <Setter Property="Fill" TargetName="Background" Value="{StaticResource HorizontalSliderThumbPressedBackground}"/>
                                <Setter Property="Stroke" TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbPressedBorder}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="Background" Value="#FFF4F4F4"/>
                                <Setter Property="Stroke" TargetName="InnerBorder" Value="{x:Null}"/>
                                <Setter Property="Data" TargetName="OuterBorder" Value="{StaticResource SliderThumbDisabledGeometry}"/>
                                <Setter Property="Stroke" TargetName="OuterBorder" Value="#FFAEB1AF"/>
                                <Setter Property="Data" TargetName="OuterBorder" Value="{StaticResource SliderPointedThumbDisabledGeometry}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="HorizontalSliderTrackNormalBorder" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFAEB1AF" Offset="0.1"/>
            <GradientStop Color="White" Offset=".9"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="HorizontalSliderTrackNormalBackground" Color="#FFE7EAEA"/>
        <Style x:Key="SliderRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle Fill="Transparent"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Geometry x:Key="SliderThumbOuterBorderGeometry">M -5,-9.5 A 1 1 0 0 1 -4,-10.5 L 4,-10.5 A 1 1 0 0 1 5,-9.5 L 5,9.5 A 1 1 0 0 1 4,10.5 L -4,10.5 A 1 1 0 0 1 -5,9.5 Z</Geometry>
        <Geometry x:Key="SliderThumbMiddleBorderGeometry">M -4,-9.5 L 4,-9.5 L 4,9.5 L -4,9.5 Z</Geometry>
        <Style x:Key="HorizontalSliderThumbStyle" TargetType="{x:Type Thumb}">
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Height" Value="22"/>
            <Setter Property="Width" Value="11"/>
            <Setter Property="Foreground" Value="Gray"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Canvas SnapsToDevicePixels="true">
                            <Canvas.RenderTransform>
                                <TranslateTransform X="5.5" Y="11"/>
                            </Canvas.RenderTransform>
                            <Path x:Name="Background" Data="{StaticResource SliderThumbOuterBorderGeometry}" Fill="{StaticResource HorizontalSliderThumbNormalBackground}"/>
                            <Path x:Name="InnerBorder" Data="{StaticResource SliderThumbMiddleBorderGeometry}" Stroke="White"/>
                            <Path x:Name="OuterBorder" Data="{StaticResource SliderThumbOuterBorderGeometry}" Stroke="#FF929292"/>
                        </Canvas>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="Background" Value="{StaticResource HorizontalSliderThumbHoverBackground}"/>
                                <Setter Property="Stroke" TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbHoverBorder}"/>
                            </Trigger>
                            <Trigger Property="Foreground" Value="Blue">
                                <Setter Property="Fill" TargetName="Background" Value="{StaticResource HorizontalSliderThumbHoverBackground}"/>
                                <Setter Property="Stroke" TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbHoverBorder}"/>
                            </Trigger>
                            <Trigger Property="IsDragging" Value="true">
                                <Setter Property="Fill" TargetName="Background" Value="{StaticResource HorizontalSliderThumbPressedBackground}"/>
                                <Setter Property="Stroke" TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbPressedBorder}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="Background" Value="#FFF4F4F4"/>
                                <Setter Property="Stroke" TargetName="InnerBorder" Value="{x:Null}"/>
                                <Setter Property="Data" TargetName="OuterBorder" Value="{StaticResource SliderThumbDisabledGeometry}"/>
                                <Setter Property="Stroke" TargetName="OuterBorder" Value="#FFAEB1AF"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="VerticalSliderThumbHoverBackground" EndPoint="1,0" StartPoint="0,0">
            <GradientStop Color="white" Offset="0"/>
            <GradientStop Color="#B8E2F9" Offset="0.5"/>
            <GradientStop Color="#B0DFF8" Offset="1"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="VerticalSliderThumbPressedBackground" EndPoint="1,0" StartPoint="0,0">
            <GradientStop Color="#B8E4FA" Offset="0.25"/>
            <GradientStop Color="#5EB4E3" Offset="0.5"/>
            <GradientStop Color="#4C8BB4" Offset="1"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="VerticalSliderThumbNormalBackground" EndPoint="1,0" StartPoint="0,0">
            <GradientStop Color="White" Offset="0"/>
            <GradientStop Color="#F0EFEF" Offset="0.4"/>
            <GradientStop Color="#D6D5D5" Offset=".8"/>
        </LinearGradientBrush>
        <Style x:Key="VerticalSliderLeftThumbStyle" TargetType="{x:Type Thumb}">
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Height" Value="10"/>
            <Setter Property="Width" Value="18"/>
            <Setter Property="Foreground" Value="Gray"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Canvas SnapsToDevicePixels="true">
                            <Canvas.RenderTransform>
                                <TransformGroup>
                                    <TransformGroup.Children>
                                        <TransformCollection>
                                            <RotateTransform Angle="90"/>
                                            <TranslateTransform X="9" Y="5"/>
                                        </TransformCollection>
                                    </TransformGroup.Children>
                                </TransformGroup>
                            </Canvas.RenderTransform>
                            <Path x:Name="Background" Data="{StaticResource SliderPointedThumbOuterBorderGeometry}" Fill="{StaticResource VerticalSliderThumbNormalBackground}"/>
                            <Path x:Name="InnerBorder" Data="{StaticResource SliderPointedThumbMiddleBorderGeometry}" Stroke="White" StrokeThickness="1"/>
                            <Path x:Name="OuterBorder" Data="{StaticResource SliderPointedThumbOuterBorderGeometry}" Stroke="#FF929292" StrokeThickness="1"/>
                        </Canvas>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="Background" Value="{StaticResource VerticalSliderThumbHoverBackground}"/>
                                <Setter Property="Stroke" TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbHoverBorder}"/>
                            </Trigger>
                            <Trigger Property="Foreground" Value="Blue">
                                <Setter Property="Fill" TargetName="Background" Value="{StaticResource VerticalSliderThumbHoverBackground}"/>
                                <Setter Property="Stroke" TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbHoverBorder}"/>
                            </Trigger>
                            <Trigger Property="IsDragging" Value="true">
                                <Setter Property="Fill" TargetName="Background" Value="{StaticResource VerticalSliderThumbPressedBackground}"/>
                                <Setter Property="Stroke" TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbPressedBorder}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="Background" Value="#FFF4F4F4"/>
                                <Setter Property="Stroke" TargetName="InnerBorder" Value="{x:Null}"/>
                                <Setter Property="Data" TargetName="OuterBorder" Value="{StaticResource SliderPointedThumbDisabledGeometry}"/>
                                <Setter Property="Stroke" TargetName="OuterBorder" Value="#FFAEB1AF"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="VerticalSliderThumbHoverBackgroundInverted" EndPoint="0,0" StartPoint="1,0">
            <GradientStop Color="white" Offset="0"/>
            <GradientStop Color="#B8E2F9" Offset="0.5"/>
            <GradientStop Color="#B0DFF8" Offset="1"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="VerticalSliderThumbPressedBackgroundInverted" EndPoint="0,0" StartPoint="1,0">
            <GradientStop Color="#B8E4FA" Offset="0.25"/>
            <GradientStop Color="#5EB4E3" Offset="0.5"/>
            <GradientStop Color="#4C8BB4" Offset="1"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="VerticalSliderThumbNormalBackgroundInverted" EndPoint="0,0" StartPoint="1,0">
            <GradientStop Color="White" Offset="0"/>
            <GradientStop Color="#F0EFEF" Offset="0.4"/>
            <GradientStop Color="#D6D5D5" Offset=".8"/>
        </LinearGradientBrush>
        <Style x:Key="VerticalSliderRightThumbStyle" TargetType="{x:Type Thumb}">
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Height" Value="10"/>
            <Setter Property="Width" Value="18"/>
            <Setter Property="Foreground" Value="Gray"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Canvas SnapsToDevicePixels="true">
                            <Canvas.RenderTransform>
                                <TransformGroup>
                                    <TransformGroup.Children>
                                        <TransformCollection>
                                            <RotateTransform Angle="-90"/>
                                            <TranslateTransform X="9" Y="5"/>
                                        </TransformCollection>
                                    </TransformGroup.Children>
                                </TransformGroup>
                            </Canvas.RenderTransform>
                            <Path x:Name="Background" Data="{StaticResource SliderPointedThumbOuterBorderGeometry}" Fill="{StaticResource VerticalSliderThumbNormalBackgroundInverted}"/>
                            <Path x:Name="InnerBorder" Data="{StaticResource SliderPointedThumbMiddleBorderGeometry}" Stroke="White" StrokeThickness="1"/>
                            <Path x:Name="OuterBorder" Data="{StaticResource SliderPointedThumbOuterBorderGeometry}" Stroke="#FF929292" StrokeThickness="1"/>
                        </Canvas>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="Background" Value="{StaticResource VerticalSliderThumbHoverBackgroundInverted}"/>
                                <Setter Property="Stroke" TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbHoverBorder}"/>
                            </Trigger>
                            <Trigger Property="Foreground" Value="Blue">
                                <Setter Property="Fill" TargetName="Background" Value="{StaticResource VerticalSliderThumbHoverBackgroundInverted}"/>
                                <Setter Property="Stroke" TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbHoverBorder}"/>
                            </Trigger>
                            <Trigger Property="IsDragging" Value="true">
                                <Setter Property="Fill" TargetName="Background" Value="{StaticResource VerticalSliderThumbPressedBackgroundInverted}"/>
                                <Setter Property="Stroke" TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbPressedBorder}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="Background" Value="#FFF4F4F4"/>
                                <Setter Property="Stroke" TargetName="InnerBorder" Value="{x:Null}"/>
                                <Setter Property="Data" TargetName="OuterBorder" Value="{StaticResource SliderPointedThumbDisabledGeometry}"/>
                                <Setter Property="Stroke" TargetName="OuterBorder" Value="#FFAEB1AF"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="VerticalSliderTrackNormalBorder" EndPoint="1,0" StartPoint="0,0">
            <GradientStop Color="#FFAEB1AF" Offset="0.1"/>
            <GradientStop Color="White" Offset=".9"/>
        </LinearGradientBrush>
        <Style x:Key="VerticalSliderThumbStyle" TargetType="{x:Type Thumb}">
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Height" Value="11"/>
            <Setter Property="Width" Value="22"/>
            <Setter Property="Foreground" Value="Gray"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Canvas SnapsToDevicePixels="true">
                            <Canvas.RenderTransform>
                                <TransformGroup>
                                    <TransformGroup.Children>
                                        <TransformCollection>
                                            <RotateTransform Angle="90"/>
                                            <TranslateTransform X="11" Y="5.5"/>
                                        </TransformCollection>
                                    </TransformGroup.Children>
                                </TransformGroup>
                            </Canvas.RenderTransform>
                            <Path x:Name="Background" Data="{StaticResource SliderThumbOuterBorderGeometry}" Fill="{StaticResource VerticalSliderThumbNormalBackground}"/>
                            <Path x:Name="InnerBorder" Data="{StaticResource SliderThumbMiddleBorderGeometry}" Stroke="White" StrokeThickness="1" Fill="#FFD2AF64"/>
                            <Path x:Name="OuterBorder" Data="{StaticResource SliderThumbOuterBorderGeometry}" Stroke="#FF929292" StrokeThickness="1"/>
                        </Canvas>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="Background" Value="{StaticResource VerticalSliderThumbHoverBackground}"/>
                                <Setter Property="Stroke" TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbHoverBorder}"/>
                            </Trigger>
                            <Trigger Property="Foreground" Value="Blue">
                                <Setter Property="Fill" TargetName="Background" Value="{StaticResource VerticalSliderThumbHoverBackground}"/>
                                <Setter Property="Stroke" TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbHoverBorder}"/>
                            </Trigger>
                            <Trigger Property="IsDragging" Value="true">
                                <Setter Property="Fill" TargetName="Background" Value="{StaticResource VerticalSliderThumbPressedBackground}"/>
                                <Setter Property="Stroke" TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbPressedBorder}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="Background" Value="#FFF4F4F4"/>
                                <Setter Property="Stroke" TargetName="InnerBorder" Value="{x:Null}"/>
                                <Setter Property="Data" TargetName="OuterBorder" Value="{StaticResource SliderThumbDisabledGeometry}"/>
                                <Setter Property="Stroke" TargetName="OuterBorder" Value="#FFAEB1AF"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="SliderStyle1" TargetType="{x:Type Slider}">
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#FFC4C4C4"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Slider}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <TickBar x:Name="TopTick" Fill="{TemplateBinding Foreground}" Height="4" Placement="Top" Grid.Row="0" Visibility="Collapsed"/>
                                <TickBar x:Name="BottomTick" Fill="{TemplateBinding Foreground}" Height="4" Placement="Bottom" Grid.Row="2" Visibility="Collapsed"/>
                                <Border x:Name="TrackBackground" BorderBrush="{StaticResource HorizontalSliderTrackNormalBorder}" BorderThickness="1" Background="{StaticResource HorizontalSliderTrackNormalBackground}" CornerRadius="1" Height="4.0" Margin="5,0" Grid.Row="1" VerticalAlignment="center">
                                    <Canvas Margin="-6,-1">
                                        <Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Height="4.0" Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" StrokeThickness="1.0" Visibility="Hidden"/>
                                    </Canvas>
                                </Border>
                                <Track x:Name="PART_Track" Grid.Row="1">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}"/>
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}"/>
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb x:Name="Thumb" Style="{StaticResource HorizontalSliderThumbStyle}"/>
                                    </Track.Thumb>
                                </Track>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="TickPlacement" Value="TopLeft">
                                <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                                <Setter Property="Style" TargetName="Thumb" Value="{StaticResource HorizontalSliderUpThumbStyle}"/>
                                <Setter Property="Margin" TargetName="TrackBackground" Value="5,2,5,0"/>
                            </Trigger>
                            <Trigger Property="TickPlacement" Value="BottomRight">
                                <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                                <Setter Property="Style" TargetName="Thumb" Value="{StaticResource HorizontalSliderDownThumbStyle}"/>
                                <Setter Property="Margin" TargetName="TrackBackground" Value="5,0,5,2"/>
                            </Trigger>
                            <Trigger Property="TickPlacement" Value="Both">
                                <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                                <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsSelectionRangeEnabled" Value="true">
                                <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="Foreground" TargetName="Thumb" Value="Blue"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Slider}">
                                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition MinWidth="{TemplateBinding MinWidth}" Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <TickBar x:Name="TopTick" Grid.Column="0" Fill="{TemplateBinding Foreground}" Placement="Left" Visibility="Collapsed" Width="4"/>
                                        <TickBar x:Name="BottomTick" Grid.Column="2" Fill="{TemplateBinding Foreground}" Placement="Right" Visibility="Collapsed" Width="4"/>
                                        <Border x:Name="TrackBackground" BorderBrush="{StaticResource VerticalSliderTrackNormalBorder}" BorderThickness="1" Background="#FF3C3D95" Grid.Column="1" CornerRadius="1" HorizontalAlignment="center" Margin="0,5" Width="4.0">
                                            <Canvas Margin="-1,-6" Background="{x:Null}">
                                                <Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" StrokeThickness="1.0" Visibility="Hidden" Width="4.0"/>
                                            </Canvas>
                                        </Border>
                                        <Track x:Name="PART_Track" Grid.Column="1">
                                            <Track.DecreaseRepeatButton>
                                                <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}"/>
                                            </Track.DecreaseRepeatButton>
                                            <Track.IncreaseRepeatButton>
                                                <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}"/>
                                            </Track.IncreaseRepeatButton>
                                            <Track.Thumb>
                                                <Thumb x:Name="Thumb" Style="{StaticResource VerticalSliderThumbStyle}"/>
                                            </Track.Thumb>
                                        </Track>
                                    </Grid>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="TickPlacement" Value="TopLeft">
                                        <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                                        <Setter Property="Style" TargetName="Thumb" Value="{StaticResource VerticalSliderLeftThumbStyle}"/>
                                        <Setter Property="Margin" TargetName="TrackBackground" Value="2,5,0,5"/>
                                    </Trigger>
                                    <Trigger Property="TickPlacement" Value="BottomRight">
                                        <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                                        <Setter Property="Style" TargetName="Thumb" Value="{StaticResource VerticalSliderRightThumbStyle}"/>
                                        <Setter Property="Margin" TargetName="TrackBackground" Value="0,5,2,5"/>
                                    </Trigger>
                                    <Trigger Property="TickPlacement" Value="Both">
                                        <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                                        <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                                    </Trigger>
                                    <Trigger Property="IsSelectionRangeEnabled" Value="true">
                                        <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
                                    </Trigger>
                                    <Trigger Property="IsKeyboardFocused" Value="true">
                                        <Setter Property="Foreground" TargetName="Thumb" Value="Blue"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <Border>
        <Border.Background>
            <ImageBrush ImageSource="/ThrustVectoringUI;component/Resources/honeycomb_pattern.png" Opacity="0.075" TileMode="Tile" Viewport="0,0,0.50,.50" Stretch="UniformToFill" />
        </Border.Background>
        <Viewbox>
            <Grid Height="768" Width="1366">
                <Grid.RowDefinitions>
                    <RowDefinition Height="31"/>
                    <RowDefinition Height="1*"/>
                </Grid.RowDefinitions>
                <Canvas Grid.Row="0" >
                    <Rectangle Height="102" Canvas.Top="-51" Width="1366" RadiusX="25" RadiusY="25">
                        <Rectangle.Fill>
                            <SolidColorBrush Color="#FFD2AF64"/>
                        </Rectangle.Fill>
                    </Rectangle>

                    <Grid Height="130" Width="1366">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="5*"/>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="5*"/>
                        </Grid.ColumnDefinitions>

                        <StackPanel Grid.Column="0" Orientation="Horizontal">
                            <Image Tag="{Binding KontrolPaneli.Baglanti}" Height="45" HorizontalAlignment="Left" Stretch="Uniform"
                               VerticalAlignment="Top" Margin="30 2 20 0">
                                <Image.Style>
                                    <Style TargetType="Image">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding KontrolPaneli.Baglanti}" Value="BaglantiYok">
                                                <Setter Property="Source" Value="/ThrustVectoringUI;component/Resources/uC_gray.png"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding KontrolPaneli.Baglanti}" Value="Bagli">
                                                <Setter Property="Source" Value="/ThrustVectoringUI;component/Resources/uC_green.png"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding KontrolPaneli.Baglanti}" Value="HataliVeri">
                                                <Setter Property="Source" Value="/ThrustVectoringUI;component/Resources/uC_red.png"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>
                            <TextBlock Text="uC Bağlantı: " FontSize="20" Foreground="#3C3D95" VerticalAlignment="Top" Margin="0 10"/>
                            <TextBlock Text="{Binding KontrolPaneli.Baglanti, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                   FontSize="20" Foreground="#3C3D95" VerticalAlignment="Top" Margin="0 10"/>
                        </StackPanel>

                        <StackPanel Grid.Column="2" Orientation="Horizontal">
                            <Image Tag="{Binding KontrolPaneli.MotorStatus}"
                               Height="45" HorizontalAlignment="Left" Stretch="Uniform"
                               VerticalAlignment="Top" Margin="30 2 20 0">
                                <Image.Style>
                                    <Style TargetType="Image">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding KontrolPaneli.MotorStatus}" Value="BaglantiYok">
                                                <Setter Property="Source" Value="/ThrustVectoringUI;component/Resources/JetMotor_gray.png"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding KontrolPaneli.MotorStatus}" Value="Off">
                                                <Setter Property="Source" Value="/ThrustVectoringUI;component/Resources/JetMotor_trans.png"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding KontrolPaneli.MotorStatus}" Value="Standby_Start">
                                                <Setter Property="Source" Value="/ThrustVectoringUI;component/Resources/JetMotor_blue.png"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding KontrolPaneli.MotorStatus}" Value="PreHeat1">
                                                <Setter Property="Source" Value="/ThrustVectoringUI;component/Resources/JetMotor_preHeat1.png"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding KontrolPaneli.MotorStatus}" Value="PreHeat2">
                                                <Setter Property="Source" Value="/ThrustVectoringUI;component/Resources/JetMotor_preHeat2.png"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding KontrolPaneli.MotorStatus}" Value="MainF_Start">
                                                <Setter Property="Source" Value="/ThrustVectoringUI;component/Resources/JetMotor_yellow.png"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding KontrolPaneli.MotorStatus}" Value="AccelDly">
                                                <Setter Property="Source" Value="/ThrustVectoringUI;component/Resources/JetMotor_accelDly.png"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding KontrolPaneli.MotorStatus}" Value="Accelerate">
                                                <Setter Property="Source" Value="/ThrustVectoringUI;component/Resources/JetMotor_accelDly.png"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding KontrolPaneli.MotorStatus}" Value="Keros_FullOn">
                                                <Setter Property="Source" Value="/ThrustVectoringUI;component/Resources/JetMotor_keroFull.png"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding KontrolPaneli.MotorStatus}" Value="Stabilise">
                                                <Setter Property="Source" Value="/ThrustVectoringUI;component/Resources/JetMotor_stabil.png"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding KontrolPaneli.MotorStatus}" Value="LearnLO">
                                                <Setter Property="Source" Value="/ThrustVectoringUI;component/Resources/JetMotor_accelDly.png"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding KontrolPaneli.MotorStatus}" Value="Run">
                                                <Setter Property="Source" Value="/ThrustVectoringUI;component/Resources/JetMotor_green.png"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding KontrolPaneli.MotorStatus}" Value="Auto_Off">
                                                <Setter Property="Source" Value="/ThrustVectoringUI;component/Resources/JetMotor_blue.png"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding KontrolPaneli.MotorStatus}" Value="Slow_Down">
                                                <Setter Property="Source" Value="/ThrustVectoringUI;component/Resources/JetMotor_turq.png"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding KontrolPaneli.MotorStatus}" Value="HataliVeri">
                                                <Setter Property="Source" Value="/ThrustVectoringUI;component/Resources/JetMotor_red.png"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding KontrolPaneli.MotorStatus}" Value="Ignite">
                                                <Setter Property="Source" Value="/ThrustVectoringUI;component/Resources/JetMotor_ignition.png"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>
                            <TextBlock Text="Jet Motor Durumu: " FontSize="20" Foreground="#3C3D95" VerticalAlignment="Top" Margin="0 10"/>
                            <TextBlock Text="{Binding KontrolPaneli.MotorStatus, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                   FontSize="20" Foreground="#3C3D95" VerticalAlignment="Top" Margin="0 10"/>
                        </StackPanel>
                        <!--<Image Grid.Column="1" Height="125" HorizontalAlignment="Center" Stretch="Uniform"
                               VerticalAlignment="Top" Margin="2"
                               Source="/Resources/itü.png"/>-->
                    </Grid>
                </Canvas>
                
                <!-- ITU AMBLEM -->
                <Image Grid.Row="1" Height="130" Stretch="Uniform" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0 120 320 0"  Source="/ThrustVectoringUI;component/Resources/itu_transparentBack.png" Opacity="0.4"/>
                
                <Grid Grid.Row="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="255*"/>
                        <ColumnDefinition Width="537*"/>
                        <ColumnDefinition Width="574*"/>
                    </Grid.ColumnDefinitions>
                    <StackPanel Grid.Column="0" Margin="0,0,0.2,-0.2">
                        <StackPanel Orientation="Horizontal" Margin="10 30 10 0">
                            <ComboBox SelectedValuePath="Content" SelectedValue="{Binding Path=KontrolPaneli.Baudrate, Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged}" 
                                      Margin="0 0 10 0" HorizontalAlignment="Left" Width="110" FontSize="20" SelectedIndex="4">
                                <ComboBoxItem Content="9600"/>
                                <ComboBoxItem Content="19200"/>
                                <ComboBoxItem Content="38400"/>
                                <ComboBoxItem Content="57600"/>
                                <ComboBoxItem Content="115200"/>
                            </ComboBox>
                            <ComboBox Margin="0" HorizontalAlignment="Right" Width="110" FontSize="20"
                                  ItemsSource="{Binding Path=KontrolPaneli.ComPortCollection, UpdateSourceTrigger=PropertyChanged}"
                                  SelectedItem="{Binding Path=KontrolPaneli.SeciliComPort, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseDoubleClick">
                                        <ei:CallMethodAction TargetObject="{Binding}" MethodName="ComPortlariBul"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </ComboBox>
                        </StackPanel>

                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0 10 0 0">
                            <Button Command="{Binding CmdBaglan}" Tag="{Binding KontrolPaneli.Baglanti}" Margin="10 0 0 0" Width="110" FontSize="16">
                                <Button.Style>
                                    <Style TargetType="Button">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding KontrolPaneli.Baglanti}" Value="BaglantiYok">
                                                <Setter Property="Content" Value="Bağlan"/>
                                                <Setter Property="Background" Value="Green"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding KontrolPaneli.Baglanti}" Value="Bagli">
                                                <Setter Property="Content" Value="Bağlantıyı Kes"/>
                                                <Setter Property="Background" Value="Red"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding KontrolPaneli.Baglanti}" Value="HataliVeri">
                                                <Setter Property="Background" Value="Red"/>
                                                <Setter Property="Content" Value="Bağlantıyı Kes"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                            <Button Margin="10 0 0 0" Width="110" Command="{Binding CmdKaydet}">
                                <Image Height="70" Stretch="Uniform" Tag="{Binding KontrolPaneli.KayitYap}">
                                    <Image.Style>
                                        <Style TargetType="Image">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding KontrolPaneli.KayitYap}" Value="false">
                                                    <Setter Property="Source" Value="/ThrustVectoringUI;component/Resources/save.png"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding KontrolPaneli.KayitYap}" Value="true">
                                                    <Setter Property="Source" Value="/ThrustVectoringUI;component/Resources/save_stop.png"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>
                            </Button>
                        </StackPanel>
                        
                        <Button Content="Motor Başlat" Command="{Binding CmdMotorBaslat}" Tag="{Binding KontrolPaneli.MotorStatus}" 
                            Margin="0 0 0 0" Height="75" FontSize="24" Visibility="Collapsed">
                            <Button.Style>
                                <Style TargetType="Button">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding KontrolPaneli.MotorStatus}" Value="BaglantiYok">
                                            <Setter Property="Background" Value="Gray"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding KontrolPaneli.MotorStatus}" Value="Off">
                                            <Setter Property="Background" Value="LightGray"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding KontrolPaneli.MotorStatus}" Value="Standby_Start">
                                            <Setter Property="Background" Value="Green"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding KontrolPaneli.MotorStatus}" Value="PreHeat1">
                                            <Setter Property="Background" Value="Yellow"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding KontrolPaneli.MotorStatus}" Value="PreHeat2">
                                            <Setter Property="Background" Value="Orange"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding KontrolPaneli.MotorStatus}" Value="MainF_On">
                                            <Setter Property="Background" Value="Red"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding KontrolPaneli.MotorStatus}" Value="AccelDly">
                                            <Setter Property="Background" Value="Red"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding KontrolPaneli.MotorStatus}" Value="Ker_Full">
                                            <Setter Property="Background" Value="Red"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding KontrolPaneli.MotorStatus}" Value="Stabil">
                                            <Setter Property="Background" Value="Red"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding KontrolPaneli.MotorStatus}" Value="LearnLO">
                                            <Setter Property="Background" Value="Red"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding KontrolPaneli.MotorStatus}" Value="Run">
                                            <Setter Property="Background" Value="Red"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding KontrolPaneli.MotorStatus}" Value="Auto_Off">
                                            <Setter Property="Background" Value="Gray"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding KontrolPaneli.MotorStatus}" Value="Slow_Down">
                                            <Setter Property="Background" Value="Gray"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                        
                        <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0 20 0 0">
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                <TextBlock Text="Fuel LC: " FontSize="25" Foreground="#3C3D95" HorizontalAlignment="Center"/>
                                <TextBlock Text="{Binding KontrolPaneli.Fuel, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"  FontSize="25" Foreground="#3C3D95" HorizontalAlignment="Center" Margin="0 0 0 0"/>
                                <TextBlock Text="Kg"  FontSize="25" Foreground="#3C3D95" HorizontalAlignment="Center" Margin="10 0 0 0"/>
                            </StackPanel>
                            <Grid HorizontalAlignment="Center">
                                <Image Height="275" Width="100" VerticalAlignment="Bottom" Margin="0 0 0 13"
                                    Source="/ThrustVectoringUI;component/Resources/linearBar.png" Stretch="Fill" 
                                    RenderTransformOrigin="0.5,0.5" Opacity="0.7">
                                    <Image.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleY="-1" ScaleX="1"/>
                                        </TransformGroup>
                                    </Image.RenderTransform>
                                </Image>
                                <Slider Value="{Binding KontrolPaneli.Fuel, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                    Orientation="Vertical" Height="100" HorizontalAlignment="Center"
                                    TickPlacement="Both" Minimum="0" Style="{DynamicResource SliderStyle1}" SmallChange="1">
                                    <Slider.LayoutTransform>
                                        <ScaleTransform ScaleX="3" ScaleY="3"/>
                                    </Slider.LayoutTransform>
                                </Slider>
                            </Grid>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="5 15 5 0">
                            <Image Height="50" Source="/ThrustVectoringUI;component/Resources/battery.png"/>
                            <TextBlock Text="Batarya [V]:" Margin="5 0 0 0" Width="130" VerticalAlignment="Center" FontSize="25" Foreground="#3C3D95" />
                            <TextBlock Text="{Binding KontrolPaneli.BatteryVoltage, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Margin="5 0 0 0" VerticalAlignment="Center" FontSize="25" Foreground="#3C3D95" />
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="5 5 5 0">
                            <Image Height="50" Source="/ThrustVectoringUI;component/Resources/pump.png"/>
                            <TextBlock Text="Pompa [V]:" Margin="5 0 0 0" Width="130" VerticalAlignment="Center" FontSize="25" Foreground="#3C3D95" />
                            <TextBlock Text="{Binding KontrolPaneli.PumpVoltage, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Margin="5 0 0 0" VerticalAlignment="Center" FontSize="25" Foreground="#3C3D95" />
                        </StackPanel>
                    </StackPanel>
                    <StackPanel Grid.Column="1">

                        <agc:Gauge Height="300" Width="450" Margin="0 35 0 0" HorizontalAlignment="Center" VerticalAlignment="Top"
                            AngleBegin="190" AngleEnd="-10" AdjacentPadding="5" Fill="Transparent" ArcPadding="0" LightDirection="0">
                            <agc:Gauge.PrimaryScale>
                                <agc:Scale Margin="0,0,0,0" AdjacentPadding="10" 
                                   AngleBegin="180" AngleEnd="0" RangeEnd="150"
                                   DialColor1="#FF3C3D95" DialColor2="#FF0000" DialColor3="#FFD2AF64"
                                   MajorTickCount="6" MinorTickCount="2" Value="{Binding KontrolPaneli.MotorRPM_gauge, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                   ValueFormat="F3" ArcPadding="0" FontSize="20" Label="{x:Null}" ValueIndicatorDistance="3">
                                    <agc:Scale.Dial>
                                        <agc:Dial DialShape="WideNeedle"/>
                                    </agc:Scale.Dial>
                                </agc:Scale>
                            </agc:Gauge.PrimaryScale>
                            <agc:Gauge.SecondaryScales>
                                <agc:Scale AngleBegin="180" AngleEnd="144" ArcPadding="55" ArcStrokeThickness="20" ArcStroke="#3C3D95"/>
                                <agc:Scale AngleBegin="144" AngleEnd="108" ArcPadding="55" ArcStrokeThickness="20" ArcStroke="Turquoise" />
                                <agc:Scale AngleBegin="108" AngleEnd="72" ArcPadding="55" ArcStrokeThickness="20" ArcStroke="#CCFFFF00"/>
                                <agc:Scale AngleBegin="72" AngleEnd="24" ArcPadding="55" ArcStrokeThickness="20" ArcStroke="Orange"/>
                                <agc:Scale AngleBegin="24" AngleEnd="0" ArcPadding="55" ArcStrokeThickness="20" ArcStroke="#CCFF0000"/>
                            </agc:Gauge.SecondaryScales>
                        </agc:Gauge>
                        <StackPanel Orientation="Horizontal" Margin="5 -30 5 0">
                            <Image Height="50" Source="/ThrustVectoringUI;component/Resources/jetMotorRPM.png" Margin="150 0 0 0"/>
                            <TextBlock Text="Motor RPM:" Margin="5 0 0 0" Width="140" VerticalAlignment="Center" FontSize="25" Foreground="#3C3D95" />
                            <TextBlock Text="{Binding KontrolPaneli.MotorRPM, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Margin="5 0 0 0" VerticalAlignment="Center" FontSize="25" Foreground="#3C3D95" />
                        </StackPanel>
                        <!--<StackPanel Orientation="Horizontal" Margin="5 5 5 0">
                        <Image Height="50" Source="/ThrustVectoringUI;component/Resources/refRPM.png"/>
                        <TextBlock Text="Motor Throttle:" Margin="5 0 0 0" Width="170" VerticalAlignment="Center" FontSize="25" Foreground="#3C3D95" />
                        <TextBlock Text="{Binding KontrolPaneli.MotorThrottle, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Margin="5 0 0 0" VerticalAlignment="Center" FontSize="25" Foreground="#3C3D95" />
                    </StackPanel>-->

                        <!-- butun sliderlarin ve basliklarinin oldugu alan-->
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0 10 0 0">

                            <!-- Throttle-->
                            <StackPanel HorizontalAlignment="Center">
                                <TextBlock Text="Throttle" FontSize="25" Foreground="#3C3D95" HorizontalAlignment="Center"/>
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                    <TextBlock Text="{Binding KontrolPaneli.ArduThrottle, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"  FontSize="25" Foreground="#3C3D95"/>
                                    <TextBlock Text="%"  FontSize="25" Foreground="#3C3D95" HorizontalAlignment="Center"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                    <Slider Value="{Binding KontrolPaneli.ArduThrottle, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                        Orientation="Vertical" Height="100" HorizontalAlignment="Center"
                                        TickPlacement="BottomRight" Maximum="200" Minimum="0" TickFrequency="10">
                                        <Slider.LayoutTransform>
                                            <ScaleTransform ScaleX="3" ScaleY="3"/>
                                        </Slider.LayoutTransform>
                                    </Slider>
                                    <Image Height="275" Width="20" VerticalAlignment="Bottom" Margin="-17 0 0 13"
                                        Source="/ThrustVectoringUI;component/Resources/linearBar.png" Stretch="Fill"
                                        Opacity="0.7"/>
                                </StackPanel>
                            </StackPanel>


                            <!-- thrust lc-->
                            <StackPanel HorizontalAlignment="Center" Margin='30 0 0 0'>
                                <TextBlock Text="Thrust LC" FontSize="25" Foreground="#3C3D95" HorizontalAlignment="Center"/>
                                <StackPanel Orientation='Horizontal' HorizontalAlignment="Center">
                                    <TextBlock Text="{Binding KontrolPaneli.Thrust, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"  FontSize="25" Foreground="#3C3D95" HorizontalAlignment="Center"/>
                                    <TextBlock Text=" N"  FontSize="25" Foreground="#3C3D95" HorizontalAlignment="Center"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                    <Slider Value="{Binding KontrolPaneli.Thrust, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                        Orientation="Vertical" Height="100" HorizontalAlignment="Center"
                                        TickPlacement="BottomRight" Maximum="200" Minimum="0" TickFrequency="10">
                                        <Slider.LayoutTransform>
                                            <ScaleTransform ScaleX="3" ScaleY="3"/>
                                        </Slider.LayoutTransform>
                                    </Slider>
                                    <Image Height="275" Width="20" VerticalAlignment="Bottom" Margin="-17 0 0 13"
                                        Source="/ThrustVectoringUI;component/Resources/linearBar.png" Stretch="Fill"
                                        Opacity="0.7"/>
                                </StackPanel>
                            </StackPanel>

                            <!-- EGT-->
                            <StackPanel HorizontalAlignment="Center" Margin='30 0 0 0'>
                                <TextBlock Text="EGT" FontSize="25" Foreground="#3C3D95" HorizontalAlignment="Center"/>
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                    <TextBlock Text="{Binding KontrolPaneli.EGT, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" FontSize="25" Foreground="#3C3D95" HorizontalAlignment="Center"/>
                                    <TextBlock Text=" °C"  FontSize="25" Foreground="#3C3D95" HorizontalAlignment="Center"/>
                                </StackPanel>
                                <Grid HorizontalAlignment="Center">
                                    <Image Height="275" Width="50" VerticalAlignment="Bottom" Margin="0 0 0 13" 
                                        Source="/ThrustVectoringUI;component/Resources/linearBar.png" Stretch="Fill"
                                        Opacity="0.7"/>
                                    <Slider Value="{Binding KontrolPaneli.EGT, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                        Orientation="Vertical" Height="100" HorizontalAlignment="Center"
                                        TickPlacement="Both" Maximum="1400" Minimum="-20" TickFrequency="142" Style="{DynamicResource SliderStyle1}" SmallChange="1">
                                        <Slider.LayoutTransform>
                                            <ScaleTransform ScaleX="3" ScaleY="3"/>
                                        </Slider.LayoutTransform>
                                    </Slider>
                                </Grid>
                            </StackPanel>
                        </StackPanel>
                        <!-- butun sliderlarin bittigi yer-->

                    </StackPanel>
                    <StackPanel Grid.Column="2" Margin="0 30 0 0">
                        <!--Roll grafigi ve sicakligi-->
                        <StackPanel Orientation="Horizontal">
                            <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center" Width="150">
                                <!-- Roll Temp.-->
                                <TextBlock Text="Roll Temp." FontSize="25" Foreground="#3C3D95" HorizontalAlignment="Center"/>
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                    <TextBlock Text="{Binding KontrolPaneli.RollTemp, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"  FontSize="25" Foreground="#3C3D95" HorizontalAlignment="Center" Margin="0 5 0 0"/>
                                    <TextBlock Text="°C"  FontSize="25" Foreground="#3C3D95" HorizontalAlignment="Center"/>
                                </StackPanel>
                                <Slider Value="{Binding KontrolPaneli.RollTemp, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                    Orientation="Vertical" Height="75" HorizontalAlignment="Center"
                                    TickPlacement="Both" Maximum="100" Minimum="0" TickFrequency="10"
                                    Style="{DynamicResource SliderStyle1}" MouseWheel="Slider_MouseWheel">
                                    <!-- Timer kullandığım için aşağısını kullanmıyorum-->
                                    <!--<i:Interaction.Triggers>
                                        <i:EventTrigger EventName="ValueChanged">
                                            <ei:CallMethodAction TargetObject="{Binding}" MethodName="SendThrottle"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>-->
                                    <Slider.LayoutTransform>
                                        <ScaleTransform ScaleX="3" ScaleY="3"/>
                                    </Slider.LayoutTransform>
                                </Slider>
                            </StackPanel>

                            <!-- Roll -->
                            <StackPanel HorizontalAlignment="Center" Margin="25 0 0 0" Width="150">
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                    <TextBlock Text="{Binding KontrolPaneli.CurrentRoll, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"  FontSize="25" Foreground="#3C3D95"/>
                                    <TextBlock Text="°"  FontSize="25" Foreground="#3C3D95" HorizontalAlignment="Center"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                    <TextBlock Text="Roll" FontSize="25" Foreground="#3C3D95" Margin="0 0 25 0" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    <Slider Value="{Binding KontrolPaneli.CurrentRoll, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                        Orientation="Vertical" Height="80" HorizontalAlignment="Center"
                                        TickPlacement="BottomRight" Maximum="45" Minimum="-45" TickFrequency="15">
                                        <Slider.LayoutTransform>
                                            <ScaleTransform ScaleX="3" ScaleY="3"/>
                                        </Slider.LayoutTransform>
                                    </Slider>
                                    <Image Height="220" Width="20" VerticalAlignment="Bottom" Margin="-17 0 0 13"
                                        Source="/ThrustVectoringUI;component/Resources/linearBar.png" Stretch="Fill"
                                        Opacity="0.7"/>
                                </StackPanel>
                            </StackPanel>

                            <!-- RollRef-->
                            <StackPanel HorizontalAlignment="Center">
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                                    <TextBlock Text="{Binding KontrolPaneli.CurrentRollRef, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"  FontSize="25" Foreground="#3C3D95"/>
                                    <TextBlock Text="°"  FontSize="25" Foreground="#3C3D95" HorizontalAlignment="Center"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                    <Slider Value="{Binding KontrolPaneli.CurrentRollRef, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                        Orientation="Vertical" Height="80" HorizontalAlignment="Center"
                                        TickPlacement="TopLeft" Maximum="45" Minimum="-45" TickFrequency="15"
                                            Margin="-15 0 0 0">
                                        <Slider.LayoutTransform>
                                            <ScaleTransform ScaleX="3" ScaleY="3"/>
                                        </Slider.LayoutTransform>
                                    </Slider>
                                    <TextBlock Text="RollRef" FontSize="25" Foreground="#3C3D95" Margin="10 0 0 0" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </StackPanel>
                            </StackPanel>

                            <!--<lvc:CartesianChart Series="{Binding KontrolPaneli.RollSeriesCollection, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" 
                                                LegendLocation="Right" Width='415' Height="300" DisableAnimations="True"
                                                Hoverable="False" DataTooltip="{x:Null}">
                                <lvc:CartesianChart.AxisY>
                                    <lvc:Axis Title="Roll Position [°]" FontSize="15" Foreground="#3C3D95" MinValue="-45" MaxValue="45">
                                    </lvc:Axis>
                                </lvc:CartesianChart.AxisY>
                                <lvc:CartesianChart.AxisX>
                                    <lvc:Axis DisableAnimations="True" Labels=" " >
                                        --><!--LabelFormatter="{Binding Formatter, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" LabelsRotation="45" FontSize="15" Foreground="#3C3D95">--><!--
                                        <lvc:Axis.Separator>
                                            <lvc:Separator IsEnabled="True" Step="{Binding Step, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"></lvc:Separator>
                                        </lvc:Axis.Separator>
                                    </lvc:Axis>
                                </lvc:CartesianChart.AxisX>
                            </lvc:CartesianChart>-->
                        </StackPanel>

                        <!--Pitch grafigi ve sicakligi-->
                        <StackPanel Orientation="Horizontal" Margin="0 10 0 0">
                            <!-- Pitch Temp. -->
                            <StackPanel HorizontalAlignment='Center' Width="150">
                                <TextBlock Text="Pitch Temp." FontSize="25" Foreground="#3C3D95" HorizontalAlignment="Center"/>
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                    <TextBlock Text="{Binding KontrolPaneli.PitchTemp, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"  FontSize="25" Foreground="#3C3D95" HorizontalAlignment="Center"/>
                                    <TextBlock Text="°C"  FontSize="25" Foreground="#3C3D95" HorizontalAlignment="Center"/>
                                </StackPanel>
                                <Slider Value="{Binding KontrolPaneli.PitchTemp, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                        Orientation="Vertical" Height="75" HorizontalAlignment="Center"
                            TickPlacement="Both" Maximum="100" Minimum="0" TickFrequency="10"
                            Style="{DynamicResource SliderStyle1}" MouseWheel="Slider_MouseWheel">
                                    <!-- Timer kullandığım için aşağısını kullanmıyorum-->
                                    <!--<i:Interaction.Triggers>
                                        <i:EventTrigger EventName="ValueChanged">
                                            <ei:CallMethodAction TargetObject="{Binding}" MethodName="SendThrottle"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>-->
                                    <Slider.LayoutTransform>
                                        <ScaleTransform ScaleX="3" ScaleY="3"/>
                                    </Slider.LayoutTransform>
                                </Slider>
                            </StackPanel>

                            <!-- Pitch -->
                            <StackPanel HorizontalAlignment="Center" Margin="25 0 0 0" Width="150">
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                    <TextBlock Text="{Binding KontrolPaneli.CurrentPitch, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"  FontSize="25" Foreground="#3C3D95"/>
                                    <TextBlock Text="°"  FontSize="25" Foreground="#3C3D95" HorizontalAlignment="Center"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                    <TextBlock Text="Pitch" FontSize="25" Foreground="#3C3D95" VerticalAlignment="Center" Margin="0 0 10 0"/>
                                    <Slider Value="{Binding KontrolPaneli.CurrentPitch, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                        Orientation="Vertical" Height="80" HorizontalAlignment="Center"
                                        TickPlacement="BottomRight" Maximum="45" Minimum="-45" TickFrequency="15">
                                        <Slider.LayoutTransform>
                                            <ScaleTransform ScaleX="3" ScaleY="3"/>
                                        </Slider.LayoutTransform>
                                    </Slider>
                                    <Image Height="220" Width="20" VerticalAlignment="Bottom" Margin="-17 0 0 13"
                                        Source="/ThrustVectoringUI;component/Resources/linearBar.png" Stretch="Fill"
                                        Opacity="0.7"/>
                                </StackPanel>
                            </StackPanel>

                            <!-- PitchRef -->
                            <StackPanel HorizontalAlignment="Center">
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                                    <TextBlock Text="{Binding KontrolPaneli.CurrentPitchRef, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"  FontSize="25" Foreground="#3C3D95"/>
                                    <TextBlock Text="°"  FontSize="25" Foreground="#3C3D95" HorizontalAlignment="Center"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                    <Slider Value="{Binding KontrolPaneli.CurrentPitchRef, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                        Orientation="Vertical" Height="80" HorizontalAlignment="Center"
                                        TickPlacement="TopLeft" Maximum="45" Minimum="-45" TickFrequency="15" Margin="-15 0 0 0">
                                        <Slider.LayoutTransform>
                                            <ScaleTransform ScaleX="3" ScaleY="3"/>
                                        </Slider.LayoutTransform>
                                    </Slider>
                                    <TextBlock Text="PitchRef" FontSize="25" Foreground="#3C3D95" VerticalAlignment="Center" Margin="10 0 0 0"/>
                                </StackPanel>
                            </StackPanel>



                            <!--<lvc:CartesianChart Series="{Binding KontrolPaneli.PitchSeriesCollection, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" 
                                                LegendLocation="Right" Width="413" Height="330" DisableAnimations="True"
                                                Hoverable="False" DataTooltip="{x:Null}">
                                <lvc:CartesianChart.AxisY>
                                    <lvc:Axis Title="Pitch Position [°]" FontSize="15" Foreground="#3C3D95" MinValue="-45" MaxValue="45">
                                        <lvc:Axis.Separator>
                                            <lvc:Separator IsEnabled="True"/>
                                        </lvc:Axis.Separator>
                                    </lvc:Axis>
                                </lvc:CartesianChart.AxisY>
                                <lvc:CartesianChart.AxisX>
                                    <lvc:Axis DisableAnimations="True" Title="Time [s]" LabelFormatter="{Binding Formatter, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" LabelsRotation="45" FontSize="15" Foreground="#3C3D95">
                                        <lvc:Axis.Separator>
                                            <lvc:Separator IsEnabled="True" Step="{Binding Step, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
                                        </lvc:Axis.Separator>
                                    </lvc:Axis>
                                </lvc:CartesianChart.AxisX>
                            </lvc:CartesianChart>-->
                        </StackPanel>
                        
                        <!-- ServoError image -->
                        <Image Tag="{Binding KontrolPaneli.ServoError}" Width="150" Height="75" Stretch="Fill" HorizontalAlignment="Center">
                            <Image.Style>
                                <Style TargetType="Image">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding KontrolPaneli.ServoError}" Value="0">
                                            <Setter Property="Source" Value="/ThrustVectoringUI;component/Resources/yesilKucuk.png"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding KontrolPaneli.ServoError}" Value="1">
                                            <Setter Property="Source" Value="/ThrustVectoringUI;component/Resources/kirmiziBuyuk.png"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                    </StackPanel>
                </Grid>
                 <!-- BÖRÜ NIGHTHAWK -->
                <Image Grid.Row="1" Height="40" Stretch="Uniform" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0 0 -20 5" Source="/ThrustVectoringUI;component/Resources/börü.png" Opacity="0.25"/>
            </Grid>
        </Viewbox>
    </Border>
</UserControl>